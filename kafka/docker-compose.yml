version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_LOG4J_LOGGERS: "org.apache.kafka=DEBUG"
    ports:
      - "2181:2181"
    volumes:
      - /mnt/drive1/config/zookeeper:/etc/kafka
    networks:
      default:

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SASL_SSL:SASL_SSL
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,SASL_SSL://kafka:9093
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.server.keystore.jks
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.client.truststore.jks
      # Define credentials (replace with your values)
      KAFKA_SSL_KEYSTORE_CREDENTIALS: keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: key_creds
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: truststore_creds
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
    volumes:
      - /mnt/drive1/config/kafka:/etc/kafka
      - /mnt/drive1/config/kafka/secrets:/etc/kafka/secrets
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.tcp.routers.kafka.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.kafka.entrypoints=kafka"
      - "traefik.tcp.services.kafka.loadbalancer.server.port=9093"
      - "traefik.tcp.routers.kafka.service=kafka"
      - "traefik.tcp.routers.kafka.tls.certresolver=tlsresolver"
    networks:
      default:
      proxy:

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "9095:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.kafkaui.rule=Host(`kafka-ui.treble.bg`)"
      - "traefik.http.routers.kafkaui.entrypoints=websecure"
      - "traefik.http.services.kafkaui.loadbalancer.server.port=9095"
      - "traefik.http.routers.kafkaui.tls.certresolver=tlsresolver"
    networks:
      default:
      proxy:

networks:
  proxy:
    name: "proxy"
    external: true

volumes:
  postgres_data:

